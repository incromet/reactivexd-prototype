/**
 * generated by Xtext 2.17.0
 */
package co.edu.escuelaing.reactivexd.reactiveXD.impl;

import co.edu.escuelaing.reactivexd.reactiveXD.KindAttribute;
import co.edu.escuelaing.reactivexd.reactiveXD.ReactiveXDPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Kind Attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.edu.escuelaing.reactivexd.reactiveXD.impl.KindAttributeImpl#getLocat <em>Locat</em>}</li>
 * </ul>
 *
 * @generated
 */
public class KindAttributeImpl extends EventPredicateImpl implements KindAttribute
{
  /**
   * The default value of the '{@link #getLocat() <em>Locat</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocat()
   * @generated
   * @ordered
   */
  protected static final String LOCAT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLocat() <em>Locat</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocat()
   * @generated
   * @ordered
   */
  protected String locat = LOCAT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected KindAttributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReactiveXDPackage.Literals.KIND_ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLocat()
  {
    return locat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocat(String newLocat)
  {
    String oldLocat = locat;
    locat = newLocat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactiveXDPackage.KIND_ATTRIBUTE__LOCAT, oldLocat, locat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReactiveXDPackage.KIND_ATTRIBUTE__LOCAT:
        return getLocat();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReactiveXDPackage.KIND_ATTRIBUTE__LOCAT:
        setLocat((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReactiveXDPackage.KIND_ATTRIBUTE__LOCAT:
        setLocat(LOCAT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReactiveXDPackage.KIND_ATTRIBUTE__LOCAT:
        return LOCAT_EDEFAULT == null ? locat != null : !LOCAT_EDEFAULT.equals(locat);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (locat: ");
    result.append(locat);
    result.append(')');
    return result.toString();
  }

} //KindAttributeImpl
